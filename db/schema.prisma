generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Proposal {
  id                       Int @id
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
  ipfs                     String
  status                   ProposalStatus
  summaryText              String @db.Text
  title                    String
  body                     String @db.Text
  authors                  Member[]
  survey                   Survey @relation(fields: [surveyId], references: [id])
  surveyId                 String @unique

  @@index([surveyId])
}

enum ProposalStatus {
  living
  idea
  draft
  review
  last_call
  stagnant
  withdrawn
  final
}

model Member {
  id                       String   @id @default(cuid())
  name                     String
  address                  String
  signature                String
  isAuthor                 Boolean
  authorProposals          Proposal[]
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
}

model Survey {
  id                       String   @id @default(cuid())
  voteStartsAt             String
  voteEndsAt               String
  votingSystem             VotingSystem @relation(fields: [votingSystemId], references: [id])
  votingSystemId           String       @unique 
  proposal                 Proposal?
  options                  SurveyOption[]
  votes                    Vote[]
  createdAt                DateTime
  updatedAt                DateTime
}

model SurveyOption {
  id                       String @id @default(cuid())
  description              String
  survey                   Survey @relation(fields:[surveyId],references:[id])
  surveyId                 String
  voteSelections           VoteSelection[]
  createdAt                DateTime
  updatedAt                DateTime

  @@index([surveyId])
}

model VotingSystem {
  id                       String   @id @default(cuid())
  slug                     String
  type                     VotingSystemTypes @default(SINGLE_CHOICE)
  description              String
  minChoices               Int
  maxChoices               Int?
  survey                   Survey?
  createdAt                DateTime
  updatedAt                DateTime
}

enum VotingSystemTypes {
  SINGLE_CHOICE
  APPROVAL
  RANKED
  WEIGHTED
  WEIGHTED_QUADRATIC
  BASIC
}

model Vote {
  id                       String   @id @default(cuid())
  signature                String
  voteSelections           VoteSelection[]
  survey                   Survey @relation(fields:[surveyId],references:[id])
  surveyId                 String
  createdAt                DateTime
  updatedAt                DateTime

  @@index([surveyId])
}

model VoteSelection {
  id                       String @id @default(cuid())
  vote                     Vote @relation(fields:[voteId],references:[id])
  voteId                   String
  ordinal                  Int
  amount                   BigInt @db.UnsignedBigInt()
  surveyOption             SurveyOption @relation(fields:[surveyOptionId],references:[id])
  surveyOptionId           String
  createdAt                DateTime
  updatedAt                DateTime

  @@index([voteId])
  @@index([surveyOptionId])
  @@unique([ordinal, voteId], name: "voteIdentifier")
}
