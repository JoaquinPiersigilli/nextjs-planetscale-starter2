@use "sass:list";
@use "sass:color";

$shadows: (
  "xs": (
    0px 1px 2px rgba(16, 24, 40, 0.05),
  ),
  "sm": (
    0px 1px 3px rgba(16, 24, 40, 0.1),
    0px 1px 2px rgba(16, 24, 40, 0.06),
  ),
  "md": (
    0px 4px 8px -2px rgba(16, 24, 40, 0.1),
    0px 2px 4px -2px rgba(16, 24, 40, 0.06),
  ),
  "lg": (
    0px 12px 16px -4px rgba(16, 24, 40, 0.12),
    0px 4px 6px -2px rgba(16, 24, 40, 0.03),
  ),
  "xl": (
    0px 20px 24px -4px rgba(16, 24, 40, 0.12),
    0px 8px 8px -4px rgba(16, 24, 40, 0.03),
  ),
  "2xl": (
    0px 24px 48px -12px rgba(16, 24, 40, 0.24),
  ),
  "3xl": (
    0px 32px 64px -12px rgba(16, 24, 40, 0.24),
  ),
);

@mixin shadow($shadow) {
  @if map-has-key($shadows, $shadow) {
    $shadow-value: map-get($shadows, $shadow);

    box-shadow: $shadow-value;
  } @else {
    @warn 'Invalid shadow: #{$shadow}.';
  }
}

@mixin layered-background($colorLayers...) {
  $background: null;

  @for $i from 1 through (length($colorLayers) - 1) {
    $colorLayer: nth($colorLayers, $i);
    $background: append(
      $background,
      linear-gradient(0deg, $colorLayer, $colorLayer),
      comma
    );
  }

  background: $background, nth($colorLayers, -1);
}
